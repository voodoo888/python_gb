""" 
1. Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.

Пример:

- 6 -> да
- 7 -> да
- 1 -> нет
"""
def func_days(a):
    if a == 6 or a == 7:
        print("YES")
    else:
        print("NO")

func_days(6)
func_days(7)
func_days(1)

"""
1. Напишите программу для. проверки истинности утверждения not(X or Y or Z) = notX and notY and notZ для всех значений предикат. ⋀ - and ⋁ - or ¬ - not
2. Напишите программу, которая принимает на вход координаты точки (X и Y), причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, в которой находится эта точка.
Пример:

- x=34; y=-30 -> 4
- x=2; y=4-> 1
- x=-34; y=-30 -> 3
"""
# var1
x = int(input())
y = int(input())
z = int(input())
print(not(x or y or z) == (not(x) and not(y) and not(z)))

# var2 (x != 0; y != 0)

if x > 0:
    print(1 if y > 0 else 4)
else: 
    print(2 if y > 0 else 3)

"""
1. Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек в этой четверти (x и y).
2. Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве.

Пример:

- A (3,6); B (2,1) -> 5,09
- A (7,-5); B (1,-1) -> 7,21
"""
# var1
def quarters(a):
    if a == 1:
        print("x > 0; y > 0")
    elif a == 2:
        print("x < 0; y > 0")
    elif a == 3:
        print("x < 0; y < 0")
    elif a == 4:
        print("x > 0; y < 0")
    else:
        print("Введите натуральное число от 1 до 4 ")

quarters(1)
quarters(2)
quarters(3)
quarters(4)
quarters(5)

# var2
def distance():
    xa = int(input("Введите координату X точки A: "))
    ya = int(input("Введите координату Y точки A: "))
    xb = int(input("Введите координату X точки B: "))
    yb = int(input("Введите координату Y точки B: "))
    ab = ((xb - xa) ** 2 + (yb - ya) ** 2) ** 0.5
    print(f" A({xa}, {ya}); B({xb}, {yb}) -> {round(ab, 2)}")

distance()